{"version":3,"sources":["actions/index.js","Button.js","Menu.jsx","Question.jsx","Choice.js","PanelBasic.jsx","util.js","PanelRandom.jsx","PanelReview.jsx","reducer/index.js","PanelCountdown.jsx","App.js","serviceWorker.js","index.js"],"names":["setDisable","value","type","Button","className","this","props","onClick","clickHandler","disabled","children","React","Component","DropDown","onChange","path","history","push","changeBg","dispatch","darkMode","connect","state","MenuItem","withRouter","Question","style","bgStyle","wdStyle","backgroundColor","width","timeLeft","roundInfo","Choice","correct","color","highlight","hidden","console","log","handleChoiceClick","index","tried","includes","isEqual","choices","question","setState","saved","toSave","save","slice","generateQuestionAndChoice","map","_","arr","i","Math","floor","random","generateRGB","length","Array","fill","renderChoices","choice","key","join","computeStyle","listToRGB","list","arrA","arrB","every","item","handleNextClick","getQuestionAndChoice","JSON","parse","localStorage","getItem","setItem","stringify","Header","PanelBasic","PanelRandom","render","bind","call","count","showScore","renderScore","total","showScoreButton","numCorrect","Object","assign","to","PanelReview","handleClick","afterRead","cnt","gotoNextState","handlePreviousClick","clearHistory","combineReducers","action","countdown","timespan","PanelCountdown","sHeader","computeQuestionStyle","getTimeLeft","timer","showAnswer","startCountdown","setInterval","onCountdown","endCountdown","clearInterval","percent","gColor","rgb","App","removeOne","prop","saveHandler","exact","Menu","Boolean","window","location","hostname","match","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0745215e.chunk.js","sourcesContent":["\nexport const countdown = () => {\n  return {\n    type: 'countdown'\n  }\n}\nexport const resetCountdown = () => {\n  return {\n    type: 'resetCountdown'\n  }\n}\n\nexport const setDisable = (value) => {\n  return {\n    type: 'setDisable',\n    value\n  }\n}\n\nexport const setNewQuestion = (question) => {\n  return {\n    type: 'setNewQuestion'\n  }\n}\n\nexport const toggleDarkMode = () => {\n  return {\n    type: 'toggleDarkMode'\n  }\n}","import React from 'react'\nexport default class Button extends React.Component {\n  render(){\n    return (\n    <button \n      className={`btn ${this.props.className}`}\n      onClick={this.props.clickHandler}\n      disabled = {this.props.disabled}>\n        {this.props.children}\n      </button>\n    )\n  }\n}","import React from 'react'\nimport './menu.css'\nimport { withRouter } from 'react-router-dom'\nimport { toggleDarkMode } from './actions'\nimport { connect } from \"react-redux\";\nimport Button from './Button'\n\nclass DropDown extends React.Component {\n\n  onChange = (path) => () => {\n    this.props.history.push(path)\n  }\n\n  render() {\n    return (\n      <div className={`Menu ${this.props.darkMode ? 'dark' : ''}`}>\n        <div className={`fixBg ${this.props.darkMode ? 'dark' : ''}`}></div>\n        <div className='contentWrap'>\n          <div className='headerWrap'>\n          <h1>MASTER IN DESIGN</h1>\n            <Button className={`display ${this.props.darkMode ? 'daylight' : 'dark'}`} clickHandler={this.changeBg}>\n              {this.props.darkMode ? 'Display daylight' : 'Display dark'}\n            </Button>\n            {/* <h1>CHOOSE A MODE</h1> */}\n          </div>\n          <div className='menuWrap'>\n            <MenuItem path='/random'>Relax</MenuItem>\n            <MenuItem path='/countdown'>Tense</MenuItem>\n            <MenuItem path='/review'>Review</MenuItem>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  changeBg = () => {\n    this.props.dispatch(toggleDarkMode())\n  }\n}\nexport default connect(state => state)(DropDown)\n\nclass MenuItem extends React.Component {\n  render() {\n    return (\n      <div onClick={() => this.clickHandler(this.props.path)}\n        className='MenuItem'>\n        <span>\n          {this.props.children}\n        </span>\n      </div>\n    )\n  }\n  clickHandler = (path) => {\n    this.props.history.push(path)\n  }\n}\n\nMenuItem = withRouter(MenuItem)\n","import React from 'react'\nimport './Question.css'\nexport default class Question extends React.Component {\n  render() {\n    let style = this.props.style\n    let bgStyle = {}\n    let wdStyle = {}\n    if (style){\n      bgStyle = {backgroundColor: style.backgroundColor}\n      wdStyle = {width: style.width}\n    }\n    return (\n      <div className='Question' \n        style={bgStyle}\n      >\n        {/* {this.props.style.backgroundColor} */}\n        <progress className='progressBar'\n        style={wdStyle} \n        >\n        </progress>\n        <h1>{this.props.children}</h1>\n        <span className='timeLeft'>{this.props.timeLeft}</span>\n        <span className='roundInfo'>{this.props.roundInfo}</span>\n    {/* {this.props.timeLeft? <span>{this.props.timeLeft}</span>:''} */}\n      </div>\n    )\n  }\n}","import React from 'react'\nimport './Choice.css'\nexport default class Choice extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  render() {\n    let style = null\n    if (this.props.correct){\n      style = {backgroundColor: 'white'}\n    } else {\n      style = {backgroundColor: this.props.color}\n    }\n    let highlight = this.props.highlight? 'highlight': ''\n    return (\n      <div \n      className={`Choice ${highlight} ${this.props.hidden? 'Choice-hidden':''}`} \n      style={style} \n      onClick={!this.props.disabled? this.props.onClick: ()=>{console.log('sorry time out.')}}>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport Question from './Question'\nimport Choice from './Choice'\nimport Button from './Button'\nimport './panel.css'\nimport './button.css'\nimport {Link} from 'react-router-dom'\nimport { generateRGB } from \"./util\";\n// import {connect} from 'react-redux'\n\nexport const TOTAL_ROUND  = 10\n// when user click a choice\nexport function handleChoiceClick(index) {\n  if (this.state.correct || this.state.tried.includes(index)) //if game is over or click on previous answer\n    return\n  if (isEqual(this.state.choices[index], this.state.question)) {\n    this.setState({\n      correct: true\n    })\n  } else {\n    if(!this.state.saved){ //save the error only when user first clicks wrong\n      let toSave = {choices: this.state.choices,\n        question: this.state.question\n    }\n    save(toSave)\n    this.setState({saved: true})\n    }\n    let tried = this.state.tried.slice()\n    tried.push(index)\n    this.setState({\n      tried\n    })\n  }\n}\n\nexport const generateQuestionAndChoice = (state)=>{\n  let choices = state.choices.map(_ => generateRGB())\n  let i = Math.floor(Math.random() * state.choices.length)\n  let question = choices[i]\n  return {question, choices}\n}\n\n\nexport const  NUMBER_CHOICE = 3\nexport const state = { \n    question: [], //rgb array\n    choices: Array(NUMBER_CHOICE).fill([]), \n    correct: false,\n    tried: [],\n    saved: false\n}\n\n\n// export const componentDidMount() => {\n//     this.props.dispatch({type: 'setDisable', value: false})\n//     this.handleNext()\n//   }\n\nexport const renderChoices = (state, props, onClick) => {\n    const choices = state.choices.map((choice, i) =>(\n      <Choice\n          key={i}\n          hidden={state.tried.includes(i)}\n          index={i}\n          color={`rgb(${choice.join(',')})`}\n          correct={state.correct} \n          onClick={() => onClick(i)}\n          disabled = {props.disabled}>\n        </Choice>\n        ));\n        return (\n          <div className='Choices'>\n            {choices}\n          </div>)\n  }\n  \n  export const computeStyle= (state) => {\n    if (state.correct) {\n      return {backgroundColor: listToRGB(state.question)}\n    } \n  }\n  \n  export const listToRGB= (list) => {\n    return `RGB(${list.join(',')})`\n  }\n\n  \n  export const render = (state, props, onClick) => {\n    const choices = this.renderChoices(state, props, onClick)\n    return (\n      <div className='panel' style={computeStyle()}>\n        <Question>\n          {listToRGB(state.question)}\n        </Question>\n        {state.total && \n          (<span className=\"process\">{`${state.count+1}/${state.total}`}</span>)\n        }\n        {props.records && \n          (<span className=\"process\">{props.records.length} exercises remaining</span>)\n        }\n        <Header>\n          {state.correct ? 'Correct' : `What's this color?`}\n        </Header>\n        {choices}\n        <Button clickHandler={onClick}><i className=\"fas fa-chevron-right\"></i> NEXT</Button>\n        <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n      </div>\n    )\n  }\n  //check whether two arrays are same\n  export const isEqual = (arrA,arrB) => {\n    if(arrA.length != arrB.length){\n      return false\n    }\n    return arrA.every((item, i) => {\n      return arrB[i] == item\n    })\n  }\n  \n\n  //handle when user click for next question\n  export function handleNextClick (getQuestionAndChoice) { \n    let {question, choices} = getQuestionAndChoice()\n    this.setState({\n      choices,\n      question,\n      tried: [],\n      correct: false, \n      saved: false //whether saved wrong answer \n    })\n  }\n\n  export const save = function (toSave) {\n      let arr = JSON.parse(localStorage.getItem('mistakes'))\n      if(!arr){\n        arr = []\n      }\n      arr.push(toSave)\n      localStorage.setItem('mistakes', JSON.stringify(arr))\n  }\n  \n\n\n\n\nexport class Header extends React.Component{\n  render(){\n    return (\n    <h1 className={`text ${this.props.correct? 'correct': ''}`}>\n      {this.props.children}\n    </h1>)\n  }\n}\n\n","export function shuffle(arr){\n  for(let i = arr.length-1; i>0;i--){\n    let j = Math.floor(Math.random(i+1))\n    let x = arr[i]\n    arr[i] = arr[j]\n    arr[j] = x\n  }\n  return arr\n}\n\nexport function generateRGB(){\n  let arr = []\n  for (let i = 0; i < 3; i++){\n    arr.push(Math.floor(Math.random()*256))\n  }\n  return arr\n}","import './panel.css'\nimport * as PanelBasic from './PanelBasic'\nimport {generateRGB } from './util'\nimport React from 'react'\nimport Question from './Question'\nimport Button from './Button'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nconst Header = PanelBasic.Header\nexport class PanelRandom extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {\n      ...PanelBasic.state,\n      total: PanelBasic.TOTAL_ROUND, \n      count: 0, \n      showScoreButton: false,\n      showScore: false,\n      numCorrect: 0,\n    }\n    \n    this.state = Object.assign(this.state, this.getQuestionAndChoice())\n  }\n  \n  getQuestionAndChoice = ()=>{\n    return PanelBasic.generateQuestionAndChoice(this.state)\n  }\n\n  render = render\n  \n  computeStyle = computeStyle\n\n  handleChoiceClick = handleChoiceClick.bind(this)\n\n  \n  handleNextClick = () => {\n    PanelBasic.handleNextClick.call(this,this.getQuestionAndChoice)\n    this.setState((state) => ({count: ++state.count}))\n  }  \n\n\n  showScore =() => {\n    this.setState({showScore: true})\n  }\n\n  renderScore = renderScore\n}\nexport const render = function() {\n  const state = this.state\n  const choices = PanelBasic.renderChoices(state, this.props, this.handleChoiceClick)\n  if(this.state.showScore){\n    return (\n      <div className='panel'>\n        <div className='innerPanel'>\n          {this.renderScore()}\n          <div className='btn-group'>\n            <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n      \n    <div className={`panel ${this.props.darkMode? 'dark':''}`} style={this.computeStyle()}>\n      <div className={this.state.showScore?'hidden':''}>\n        <Question>\n          {PanelBasic.listToRGB(this.state.question)}\n        </Question>\n        <span className=\"process\">{`${this.state.count+1}/${this.state.total}`}</span>\n        <Header correct={this.state.correct}>\n          {this.state.correct ? 'Correct' : `What's this color?`}\n        </Header>\n        {choices}\n        <div className='btn-group'>\n          <Button \n            className={this.state.showScoreButton? 'hidden':''} \n            disabled = {!this.state.correct}\n            clickHandler={this.handleNextClick}>\n              <i className=\"fas fa-chevron-right\"></i> NEXT\n          </Button>\n          <Button \n            className={this.state.showScoreButton? '': 'hidden'} \n            clickHandler={this.showScore}><i className=\"fas fa-chevron-right\"></i>\n            VIEW SCORE\n          </Button>\n          <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport const computeStyle = function() {\n  if(this.state.showScore)\n    return\n  return PanelBasic.computeStyle(this.state)\n}\n\nexport const renderScore =function() {\n  return <h1 className='message'>Your score: {`${this.state.numCorrect}/${this.state.total}`}</h1>\n}\n\nexport const handleChoiceClick = function (index) { //handle choice click\n  PanelBasic.handleChoiceClick.call(this, index)\n  if (PanelBasic.isEqual(this.state.choices[index], this.state.question)){\n    if (this.state.tried.length == 0) {\n      this.setState(state=>({numCorrect: ++state.numCorrect}))\n    }\n    if(this.state.count+1 == this.state.total){\n      this.setState({showScoreButton: true})\n    }\n  }\n}\n\nexport default connect((state) => state)(PanelRandom)","import React from 'react'\nimport * as PanelBasic from './PanelBasic'\nimport Button from './Button'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport { render,computeStyle,renderScore,handleChoiceClick } from \"./PanelRandom\";\nimport Question from './Question'\nconst Header = PanelBasic.Header\nexport class PanelReview extends React.Component{\n  constructor(props){\n    super(props)\n    let history = JSON.parse(localStorage.getItem('mistakes'))\n    if (!history)\n      history = []\n    this.state = {history}\n    this.state = {\n      ...PanelBasic.state,\n      ...this.getQuestionAndChoice(0),\n      history,\n      total: history.length,\n      count: 0\n    }\n  }\n  getQuestionAndChoice = (index) => {\n    return Object.assign({},this.state.history[index])\n  }\n\n  //when user clicks an answer\n  handleClick = (index) => { \n    if(!this.state.tried.length) //consume one record as soon as when user clicks an answer\n      this.props.afterRead()\n    super.handleClick(index)\n  }\n\n  gotoNextState(count){\n    this.setState({\n      count,\n     ...this.getQuestionAndChoice(count),\n     tried: [],\n     correct: false, \n     saved: false\n    })\n  }\n  handleNextClick = () => {\n    let cnt\n    if (this.state.count+1 == this.state.history.length) {\n      cnt = 0\n    } else {\n      cnt = ++this.state.count\n    }\n    this.gotoNextState(cnt)\n    \n  }\n\n  handlePreviousClick =() => {\n    let cnt = 0\n    if(this.state.count == 0) {\n      cnt = this.state.history.length-1\n    } else {\n      cnt = --this.state.count\n    }\n    this.gotoNextState(cnt)\n  }\n\n  handleChoiceClick = (index) => {\n    PanelBasic.handleChoiceClick.call(this, index)\n  }\n\n\n  clearHistory = () => {\n    this.setState({history: []})\n    localStorage.setItem('mistakes', JSON.stringify([]))\n  }\n\n  renderScore = renderScore\n  \n  render = () => {\n    if (!this.state.history.length) {\n      return (\n      <div className='panel' style={this.computeStyle()}>\n        <div className ='innerPanel'>\n          <h1 className='message'>SORRY, NO EXERCISES TO REVIEW</h1>\n          <div className='btn-group'>\n          <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n          </div>\n        </div>\n        </div>)\n    }\n    const state = this.state\n    const props = this.props\n    const choices = PanelBasic.renderChoices(state, props, this.handleChoiceClick)\n    return (\n      <div className={`panel ${this.props.darkMode? 'dark':''}`} style={this.computeStyle()}>\n        <Question>\n          {PanelBasic.listToRGB(state.question)}\n        </Question>\n        {state.total && \n          (<span className=\"process\">{`${state.count+1}/${state.total}`}</span>)\n        }\n        <Header correct={this.state.correct}>\n          {state.correct ? 'Correct' : `What's this color?`}\n        </Header>\n        {choices}\n        <div className='btn-group'>\n          <Button clickHandler={this.handlePreviousClick}><i className=\"fas fa-chevron-left\"></i> PREVIOUS</Button>\n          <Button clickHandler={this.handleNextClick}><i className=\"fas fa-chevron-right\"></i> NEXT</Button>\n          <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n          <Button clickHandler={this.clearHistory}><i className=\"fas fa-broom\"></i> CLEAR HISTORY</Button>\n        </div>\n      </div>\n    )\n  }\n  computeStyle = () => {\n    if (!this.state.history.length)\n      return\n    return PanelBasic.computeStyle(this.state)\n  }\n}\n\nexport default connect(state => state)(PanelReview)","import {combineReducers} from 'redux'\nconst NUMBER_CHOICE = 3\nconst timespan = 10000 //ms \nexport const INTERVAL = 10 //ms\nexport const totalUpdates = timespan/INTERVAL\nlet initialGameState = {\n  question: [], //rgb array\n  choices: Array(NUMBER_CHOICE).fill([]), \n  correct: false,\n  tried: [],\n  saved: false\n}\n\nconst newQuestion = (state, action) => {\n  return {\n    ...state,\n    ...initialGameState\n  }\n}\n\n\n\n\nfunction disabled(state=false, action){\n  switch(action.type){\n    case 'setDisable':\n      return action.value\n    default:\n      return state\n  }\n}\n\nconst countdown = (state=totalUpdates,action) => {\n  switch(action.type){\n    case 'countdown':\n      return --state;\n    case 'resetCountdown':\n      return totalUpdates\n    default:\n      return state\n  }\n}\n\nconst darkMode = (state=false, action) => {\n  switch(action.type){\n    case 'toggleDarkMode':\n      return !state\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  disabled,\n  countdown,\n  darkMode\n})\n\n","import React from 'react'\nimport * as PanelBasic from './PanelBasic'\nimport Button from './Button'\nimport * as action from './actions'\nimport Question from './Question'\nimport Choice from \"./Choice\";\nimport {Header} from './PanelBasic'\nimport { Link } from \"react-router-dom\";\nimport {totalUpdates} from './reducer'\nimport {connect} from 'react-redux'\nimport {INTERVAL} from './reducer'\nclass PanelCountdown extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      ...PanelBasic.state,\n      total: PanelBasic.TOTAL_ROUND, //number of rounds for Q&A\n      count: 0, //the current round\n      showScoreButton: false, //control the score button display\n      showScore: false, //control the score diplay\n      numCorrect: 0, //store the number of correct answers in the rounds\n      timer: null\n    }\n    this.state = Object.assign(this.state, this.getQuestionAndChoice())\n\n    \n  }\n  componentDidMount(){\n    this.startCountdown()  \n  }\n  componentWillUnmount(){\n    console.log('in unmount')\n    this.endCountdown()\n    this.props.dispatch(action.setDisable(false))\n    this.props.dispatch(action.resetCountdown())\n  }\n  \n  getQuestionAndChoice =() => {\n    return PanelBasic.generateQuestionAndChoice(this.state)\n  }\n  render = () => {\n    const state = this.state\n    const props = this.props\n    const choices = this.renderChoices(state, props, this.handleChoiceClick, !!state.saved)\n    let sHeader = ''\n    if (this.state.correct){\n      sHeader = 'Correct'\n    } else if (this.props.countdown == 0){\n      sHeader = 'Sorry, time out'\n    }else if (this.state.saved){\n      sHeader = 'Sorry, wrong'\n    } else {\n      sHeader = \"What's this color?\"\n    } \n    if(this.state.showScore){\n      return (\n        <div className='panel'>\n          <div className='innerPanel'>\n            {this.renderScore()}\n            <div className='btn-group'>\n              <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n            </div>\n          </div>\n        </div>\n      )\n    }\n    return (\n      <div className={`panel ${this.props.darkMode? 'dark':''}`} style={this.computeStyle()}>\n        <div className={this.state.showScore?'hidden':''}>\n          <Question \n            style={this.computeQuestionStyle()} \n            timeLeft={this.getTimeLeft()}\n            roundInfo={`${state.count+1}/${state.total}`}\n            >\n            {PanelBasic.listToRGB(state.question)}\n          </Question>\n          <Header correct={this.state.correct}>{sHeader}</Header>\n          {choices}\n          <div className='btn-group'>\n            <Button \n              className={this.state.showScoreButton? 'hidden':''} \n              disabled = {!!this.state.timer}\n              clickHandler={this.handleNextClick}>\n                <i className=\"fas fa-chevron-right\"></i> NEXT\n            </Button>\n            <Button \n              className={this.state.showScoreButton? '': 'hidden'} \n              clickHandler={() => this.setState({showScore: true})}><i className=\"fas fa-chevron-right\"></i>\n              VIEW SCORE\n            </Button>\n            <Link to='/'><Button><i className=\"fas fa-level-up-alt\"></i> MENU</Button></Link>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  renderChoices = ()=> {\n    const state = this.state\n    const props = this.props\n    let showAnswer = this.state.saved\n    const choices = state.choices.map((choice, i) =>{\n      let highlight = false\n      if (showAnswer && PanelBasic.isEqual(choice, this.state.question)){\n        highlight = true\n      }\n      let oChoice =  (\n        <Choice\n          key={i}\n          hidden={state.tried.includes(i)}\n          index={i}\n          color={`rgb(${choice.join(',')})`}\n          correct={state.correct} \n          onClick={() => this.handleChoiceClick(i)}\n          disabled = {props.disabled}\n          highlight = {highlight}\n          >\n        </Choice>)\n      return oChoice\n    })\n    return (\n      <div className='Choices'>\n        {choices}\n      </div>\n    )\n  }\n\n  \n  computeStyle = () => {\n    if (this.state.showScore)\n      return\n    return PanelBasic.computeStyle(this.state)\n  }\n  getTimeLeft = () => {\n    if(this.props.countdown == 0)\n      return 0\n    return Math.floor(this.props.countdown * INTERVAL / 1000  + 1)\n  }\n  computeQuestionStyle(){\n    let percent = 1 - this.props.countdown/totalUpdates\n    let rTarget = 255\n    let rSource = 100\n    let gTarget = 100\n    let gSource = 200\n    let rColor = rSource + (rTarget - rSource) * percent\n    let gColor = gSource + (gTarget - gSource) * percent\n    let rgb = `rgb(${rColor}, ${gColor},0)`\n    return {\n      width: `${this.props.countdown/totalUpdates * 100}%`,\n      backgroundColor: rgb\n    }\n  }\n  startCountdown = () => {\n    let timer = setInterval(() => this.onCountdown(), INTERVAL)\n    this.setState({timer})\n  }\n  endCountdown = () => {\n    clearInterval(this.state.timer)\n    this.setState({timer: null})\n    this.props.dispatch(action.setDisable(true))\n    // if(!this.saved) {\n    //   let toSave = {choices: this.state.choices,\n    //     question: this.state.question\n    //   }\n    //   PanelBasic.save(toSave)\n    //   this.setState({saved: true})\n    // }\n  }\n  handleNextClick =() => {\n    this.setState((state) =>({count: ++state.count}))\n    PanelBasic.handleNextClick.call(this, this.getQuestionAndChoice)\n    this.props.dispatch(action.resetCountdown())\n    this.props.dispatch(action.setDisable(false))\n    this.startCountdown()\n  }\n  handleChoiceClick = (index) => {\n    if(this.state.tried.length > 0 || this.saved || !this.state.timer)\n      return\n\n    this.endCountdown()\n    this.setState({disabled: false})\n    if (PanelBasic.isEqual(this.state.choices[index], this.state.question)){      \n      this.setState({correct: true})\n      this.setState((state) => {\n        return {\n          numCorrect: ++state.numCorrect\n        }\n      }, () => {\n        if(this.state.count + 1 == this.state.total){\n          this.setState({showScoreButton: true})\n        }\n      })\n      } else if(!this.state.saved){ //save the error only when user first clicks wrong\n          let toSave = {choices: this.state.choices,\n            question: this.state.question\n          }\n          PanelBasic.save(toSave)\n          this.setState({saved: true})\n\n          let tried = this.state.tried.slice()\n          tried.push(index)\n          this.setState({\n            tried\n          })\n          \n          if(this.state.count + 1 == this.state.total){\n            this.setState({showScoreButton: true})\n          }\n    }\n  }\n\n\n  onCountdown = () => {\n    if (this.props.countdown == 0){\n      this.endCountdown()\n      if(!this.state.saved){ //save the error only when user first clicks wrong\n        let toSave = {choices: this.state.choices,\n          question: this.state.question\n        }\n        PanelBasic.save(toSave)\n        this.setState({saved: true})\n      }\n      if(this.state.count + 1 == this.state.total){\n        this.setState({showScoreButton: true})\n      }\n      console.log('time stop')\n    }else {\n      this.props.dispatch(action.countdown())\n    }\n  }\n  renderScore =() => {\n    return <h1 className='message'>Your score: {`${this.state.numCorrect}/${this.state.total}`}</h1>\n  }\n}\n\nexport default connect(state=>state, null)(PanelCountdown)\n\n\n\n\n\n","import React from 'react';\nimport './App.css';\nimport Menu from './Menu'\nimport PanelRandom from './PanelRandom'\nimport PanelReview from './PanelReview'\nimport PanelCountdown from './PanelCountdown'\n\n\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\nimport {Provider, connect} from 'react-redux'\n\n\nclass App extends React.Component {\n  \n  render(){\n    return (\n        <Router>\n          <div className={`AppWrap ${this.props.darkMode? 'dark':''}`}>\n            <div className={`App ${this.props.darkMode? 'dark':''}`}>\n              <Route exact path='/'>\n                <Menu></Menu>\n              </Route>\n              <Route path='/random'>\n                <PanelRandom></PanelRandom>\n              </Route>\n              <Route path='/review'>\n                <PanelReview \n                  afterRead = {this.removeOne}></PanelReview>\n              </Route>\n              <Route path='/countdown'>\n                <PanelCountdown></PanelCountdown>\n              </Route>\n            </div>\n\n          </div>\n        </Router>\n      );\n  }\n  componentDidMount(){\n    console.log(`\n    author: yiping\n    email: yiping.huang@student.maastrichtuniversity.nl\n    `)\n  }\n  //remove one record from history and update state\n  removeOne = () => {\n    if (this.state.history.length > 0){\n      this.setState((state,prop) => {\n        let history = state.history.slice(1)\n        localStorage.setItem('mistakes', JSON.stringify(history))\n        return {history}\n      })\n    }\n  }\n  saveHandler = (toSave) => {\n    this.setState((state, prop) => {\n      let history = [...state.history, toSave]\n      localStorage.setItem('mistakes', JSON.stringify(state.history))\n      return {history}\n    })\n  }\n}\n\nexport default connect(state=>state, null)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from 'redux'\nimport {Provider, connect} from 'react-redux'\nimport rootReducer from './reducer'\nconst store = createStore(rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}